match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T)) %>%
collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T)) %>%
dplyr::collect()
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL))
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information / nrow(tibble::as_tibble(workTable)),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(tibble::as_tibble(workTable)),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(tibble::as_tibble(workTable)),3)*100) %>%
dplyr::collect()
rlang::last_error()
View(records_prop)
View(records_n)
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL))
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T)) %>% collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T)) %>% dplyr::collect()
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL))
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T)) %>% dplyr::collect()
View(records_n)
records_n$different_gestationalAge
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL))
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_n$different_gestationalAge
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% collect()
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% dplyr::collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information / nrow(tibble::as_tibble(workTable)),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(tibble::as_tibble(workTable)),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(tibble::as_tibble(workTable)),3)*100)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(workTable))
records <-  NULL
records_n <- NULL
View(records_long)
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% dplyr::collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(workTable),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(workTable),3)*100,
missing_information = round(.data$missing_information / nrow(workTable),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(workTable),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(workTable),3)*100)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(workTable))
records <-  NULL
records_n <- NULL
records_prop <- NULL
View(records_long)
nrow(tibble::as_tibble(workTable))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information / nrow(tibble::as_tibble(workTable)),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(tibble::as_tibble(workTable)),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(tibble::as_tibble(workTable)),3)*100)
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
dbplyr::sql(sqlDiffDays(
CDMConnector::dbms(attr(cdm, "dbcon")),
"pregnancy_start_date",
"pregnancy_end_date"
)) , 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% dplyr::collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information / nrow(tibble::as_tibble(workTable)),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(tibble::as_tibble(workTable)),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(tibble::as_tibble(workTable)),3)*100)
View(records_prop)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(workTable))
View(records)
View(records_long)
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(tibble::as_tibble(workTable))
records <-  NULL
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(tibble::as_tibble(workTable)))
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(tibble::as_tibble(workTable))
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(tibble::as_tibble(workTable)))
View(records_long)
records <- workTable %>%
dplyr::select(
pregnancy_outcome,
pregnancy_mode_delivery)
#check if miscarriage or TOP has vaginal or c-section delivery
records <- records %>% dplyr::mutate(
n = dplyr::if_else(((.data$pregnancy_outcome == 4067106 | .data$pregnancy_outcome == 4081422)
& (.data$pregnancy_mode_delivery == 4125611 | .data$pregnancy_mode_delivery ==4015701)),1,0,missing = NULL)) %>% collect()
#check if miscarriage or TOP has vaginal or c-section delivery
records <- records %>% dplyr::mutate(
n = dplyr::if_else(((.data$pregnancy_outcome == 4067106 | .data$pregnancy_outcome == 4081422)
& (.data$pregnancy_mode_delivery == 4125611 | .data$pregnancy_mode_delivery ==4015701)),1,0,missing = NULL)) %>%
dplyr::collect()
records_n <- records %>%
dplyr::summarise(
no_match = sum(.data$n, na.rm = T),
match = sum(.data$n==0, na.rm = T),
missing_information = sum(is.na(.data$n)),
)
records_prop <- records_n %>%
dplyr::summarise(
no_match = round(.data$no_match / nrow(tibble::as_tibble(workTable)),3)*100,
match = round(.data$match / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information /nrow(tibble::as_tibble(workTable)),3)*100)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(tibble::as_tibble(workTable)))
View(records_long)
records <- workTable %>%
dplyr::select(
"pregnancy_number_fetuses",
"pregnancy_number_liveborn",
"pregnancy_single"
)
#check if number of fetuses is equal or larger to number of liveborn
#check if single / multiple pregnancy adds up with fetus number
records <- records %>% dplyr::mutate(
numberNotRight = dplyr::if_else((.data$pregnancy_number_fetuses) >= (.data$pregnancy_number_liveborn),0,1,missing = NULL),
multipleWrong = dplyr::if_else((.data$pregnancy_number_fetuses > 1 &  .data$pregnancy_single == 4188539) |
(.data$pregnancy_number_fetuses == 1 &  .data$pregnancy_single == 4188540),1,0,missing = NULL),
multipleRight = dplyr::if_else((.data$pregnancy_number_fetuses >1 &  .data$pregnancy_single == 4188540 )|
(.data$pregnancy_number_fetuses == 1 &  .data$pregnancy_single == 4188539),1,0,missing = NULL)) %>%
dplyr::collect()
records_n <- records %>%
dplyr::summarise(
relativeNumberWrong = sum(.data$numberNotRight, na.rm = T),
relativeNumberRight = sum(.data$numberNotRight == 0, na.rm = T),
missing_relativeNumber = sum(is.na(.data$numberNotRight)),
multipleWrong = sum(.data$multipleWrong, na.rm = T),
multipleRight = sum(.data$multipleRight, na.rm = T),
missing_multiple = sum(as.integer(is.na((.data$pregnancy_number_fetuses) | is.na(.data$pregnancy_single)) |
(is.na(.data$pregnancy_number_fetuses) & is.na(.data$pregnancy_single))))
)
records_prop <- records_n %>%
dplyr::summarise(
relativeNumberWrong = round(.data$relativeNumberWrong / nrow(tibble::as_tibble(workTable)),3)*100,
relativeNumberRight = round(.data$relativeNumberRight / nrow(tibble::as_tibble(workTable)),3)*100,
missing_relativeNumber = round(.data$missing_relativeNumber / nrow(tibble::as_tibble(workTable)),3)*100,
multipleWrong = round(.data$multipleWrong / nrow(tibble::as_tibble(workTable)),3)*100,
multipleRight = round(.data$multipleRight / nrow(tibble::as_tibble(workTable)),3)*100,
missing_multiple = round(.data$missing_multiple / nrow(tibble::as_tibble(workTable)),3)*100
)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(tibble::as_tibble(workTable)))
View(records_long)
motherTable <- cdm$motherTable
babyTable <- cdm$babyTable
recordshelp <- motherTable %>%
dplyr::select(
pregnancy_number_fetuses,
pregnancy_single,
pregnancy_id) %>%
dplyr::left_join((dplyr::select(babyTable,fetus_id,pregnancy_id)),by = "pregnancy_id")
records<- recordshelp %>% dplyr::left_join((recordshelp %>% dplyr::group_by(.data$pregnancy_id) %>% dplyr::tally ()), by= "pregnancy_id") %>% dplyr::collect()
#add fetus count to pregnancy
recordshelp <- NULL
View(records)
records<- records %>% dplyr::mutate(
single_not_align_with_noOfFetusId = dplyr::if_else((.data$n > 1  &  .data$pregnancy_single == 4188539) | (.data$n == 1  &  .data$pregnancy_single == 4188540),1,0,missing = NULL),
single_align_with_noOfFetusId = dplyr::if_else((.data$n > 1  &  .data$pregnancy_single == 4188540) | (.data$n == 1  &  .data$pregnancy_single == 4188539) ,1,0,missing = NULL),
noOfFetus_not_align_with_noOfFetusId = dplyr::if_else((.data$pregnancy_number_fetuses  != .data$n ),1,0,missing = NULL),
noOfFetus_align_with_noOfFetusId = dplyr::if_else((.data$pregnancy_number_fetuses  == .data$n ),1,0,missing = NULL),
pregnancy_id = pregnancy_id,
.keep=c("used"))  %>%
dplyr::distinct(.data$pregnancy_id, .keep_all = TRUE) %>%
dplyr::collect()
records_n <- records %>%
dplyr::summarise(
single_not_align_with_noOfFetusId = sum(.data$single_not_align_with_noOfFetusId, na.rm = T),
single_align_with_noOfFetusId = sum(.data$single_align_with_noOfFetusId, na.rm = T),
missing_single = sum(is.na(.data$pregnancy_single)), #n cannot be missing
noOfFetus_not_align_with_noOfFetusId = sum(.data$noOfFetus_not_align_with_noOfFetusId, na.rm = T),
noOfFetus_align_with_noOfFetusId = sum(.data$noOfFetus_align_with_noOfFetusId, na.rm = T),
missing_noOfFetus = sum(is.na(.data$pregnancy_number_fetuses)) #n cannot be missing
)
records_prop <- records_n %>%
dplyr::summarise(
single_not_align_with_noOfFetusId = round(.data$single_not_align_with_noOfFetusId /nrow(motherTable),3)*100,
single_align_with_noOfFetusId = round(.data$single_align_with_noOfFetusId /nrow(motherTable),3)*100,
missing_single = round(.data$missing_single /nrow(motherTable),3)*100,
noOfFetus_not_align_with_noOfFetusId = round(.data$noOfFetus_not_align_with_noOfFetusId / nrow(motherTable),3)*100,
noOfFetus_align_with_noOfFetusId = round(.data$noOfFetus_align_with_noOfFetusId / nrow(motherTable),3)*100,
missing_noOfFetus = round(.data$missing_noOfFetus /nrow(motherTable),3)*100,
)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(motherTable))
View(records_long)
# checks
errorMessage <- checkmate::makeAssertCollection()
#checkDbType(cdm = cdm, messageStore = errorMessage)
checkmate::assertTRUE(inherits(motherTable, 'tbl_dbi'), add = errorMessage)
checkmate::assertTRUE(inherits(babyTable, 'tbl_dbi'), add = errorMessage)
checkmate::reportAssertions(collection = errorMessage)
recordshelp <- motherTable %>%
dplyr::select(
pregnancy_number_fetuses,
pregnancy_single,
pregnancy_id) %>%
dplyr::left_join((dplyr::select(babyTable,fetus_id,pregnancy_id)),by = "pregnancy_id")
records<- recordshelp %>% dplyr::left_join((recordshelp %>% dplyr::group_by(.data$pregnancy_id) %>% dplyr::tally ()), by= "pregnancy_id") %>% dplyr::collect()
#add fetus count to pregnancy
recordshelp <- NULL
records<- records %>% dplyr::mutate(
single_not_align_with_noOfFetusId = dplyr::if_else((.data$n > 1  &  .data$pregnancy_single == 4188539) | (.data$n == 1  &  .data$pregnancy_single == 4188540),1,0,missing = NULL),
single_align_with_noOfFetusId = dplyr::if_else((.data$n > 1  &  .data$pregnancy_single == 4188540) | (.data$n == 1  &  .data$pregnancy_single == 4188539) ,1,0,missing = NULL),
noOfFetus_not_align_with_noOfFetusId = dplyr::if_else((.data$pregnancy_number_fetuses  != .data$n ),1,0,missing = NULL),
noOfFetus_align_with_noOfFetusId = dplyr::if_else((.data$pregnancy_number_fetuses  == .data$n ),1,0,missing = NULL),
pregnancy_id = pregnancy_id,
.keep=c("used"))  %>%
dplyr::distinct(.data$pregnancy_id, .keep_all = TRUE) %>%
dplyr::collect()
records_n <- records %>%
dplyr::summarise(
single_not_align_with_noOfFetusId = sum(.data$single_not_align_with_noOfFetusId, na.rm = T),
single_align_with_noOfFetusId = sum(.data$single_align_with_noOfFetusId, na.rm = T),
missing_single = sum(is.na(.data$pregnancy_single)), #n cannot be missing
noOfFetus_not_align_with_noOfFetusId = sum(.data$noOfFetus_not_align_with_noOfFetusId, na.rm = T),
noOfFetus_align_with_noOfFetusId = sum(.data$noOfFetus_align_with_noOfFetusId, na.rm = T),
missing_noOfFetus = sum(is.na(.data$pregnancy_number_fetuses)) #n cannot be missing
)
records_prop <- records_n %>%
dplyr::summarise(
single_not_align_with_noOfFetusId = round(.data$single_not_align_with_noOfFetusId /nrow(tibble::as_tibble(motherTable)),3)*100,
single_align_with_noOfFetusId = round(.data$single_align_with_noOfFetusId /nrow(tibble::as_tibble(motherTable)),3)*100,
missing_single = round(.data$missing_single /nrow(tibble::as_tibble(motherTable)),3)*100,
noOfFetus_not_align_with_noOfFetusId = round(.data$noOfFetus_not_align_with_noOfFetusId / nrow(tibble::as_tibble(motherTable)),3)*100,
noOfFetus_align_with_noOfFetusId = round(.data$noOfFetus_align_with_noOfFetusId / nrow(tibble::as_tibble(motherTable)),3)*100,
missing_noOfFetus = round(.data$missing_noOfFetus /nrow(tibble::as_tibble(motherTable)),3)*100,
)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(tibble::as_tibble(motherTable)))
records <-  NULL
records_n <- NULL
records_prop <- NULL
View(records_long)
devtools::load_all()
usethis::use_package("SqlRender")
devtools::load_all()
devtools::load_all()
devtools::load_all(".")
devtools::load_all(".")
install.packages("CDMConnector")
install.packages("CDMConnector")
devtools::load_all(".")
devtools::load_all(".")
View(records_long)
class(records_long)
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
!!CDMConnector::datediff("pregnancy_start_date", "pregnancy_end_date", interval = "day"), 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% dplyr::collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information / nrow(tibble::as_tibble(workTable)),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(tibble::as_tibble(workTable)),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(tibble::as_tibble(workTable)),3)*100)
View(records)
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
!!CDMConnector::datediff("pregnancy_start_date", "pregnancy_end_date", interval = "day"), 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% dplyr::collect()
devtools::load_all()
cdm <- mockPregnancy(motherTable = NULL,
babyTable = NULL,
pregnancy_size = 100,
fetus_size = 110,
seed = 1)
workTable <- cdm$motherTable
# checks
errorMessage <- checkmate::makeAssertCollection()
#checkDbType(cdm = cdm, messageStore = errorMessage)
checkmate::assertTRUE(inherits(workTable, 'tbl_dbi'), add = errorMessage)
checkmate::reportAssertions(collection = errorMessage)
records <- workTable %>%
dplyr::select(
"gestational_length_in_day",
"pregnancy_start_date",
"pregnancy_end_date")
records <- records %>% dplyr::mutate(
n = dplyr::if_else(.data$gestational_length_in_day ==
!!CDMConnector::datediff("pregnancy_start_date", "pregnancy_end_date", interval = "day"), 0, 1,missing = NULL),
endBeforeStart = dplyr::if_else((.data$pregnancy_start_date>=.data$pregnancy_end_date),1,0,missing = NULL),
endAfterStart = dplyr::if_else((.data$pregnancy_start_date<.data$pregnancy_end_date),1,0,missing = NULL)) %>% dplyr::collect()
records_n <- records %>%
dplyr::summarise(
different_gestationalAge = sum(.data$n, na.rm = T),
match_gestationalAge = sum(.data$n == 0, na.rm = T),
missing_information = sum(is.na(.data$n)),
endBeforeStart = sum(.data$endBeforeStart, na.rm =T),
endAfterStart = sum(.data$endAfterStart, na.rm =T))
records_prop <- records_n %>%
dplyr::summarise(
different_gestationalAge = round(.data$different_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
match_gestationalAge = round(.data$match_gestationalAge / nrow(tibble::as_tibble(workTable)),3)*100,
missing_information = round(.data$missing_information / nrow(tibble::as_tibble(workTable)),3)*100,
endBeforeStart = round(.data$endBeforeStart / nrow(tibble::as_tibble(workTable)),3)*100,
endAfterStart = round(.data$endAfterStart / nrow(tibble::as_tibble(workTable)),3)*100)
records_n <- reshape2::melt(records_n,variable.names="variable",value.name = "count")
records_prop <- reshape2::melt(records_prop,variable.names="variable",value.name = "proportionInPercentage")
records_long <- records_n %>% dplyr::left_join(records_prop, by = "variable")  %>% dplyr::mutate(Total = nrow(tibble::as_tibble(workTable)))
View(records_n)
View(records_prop)
View(records_long)
usethis::use_readme_rmd()
usethis::use_vignette("Introduction")
usethis::use_mit_license()
class(records)
devtools::build_vignettes()
.Last.error
devtools::build_vignettes()
library(PETDiagnostics)
library(CDMConnector)
library(dplyr)
cdm <-  PETDiagnostics:::getEunomiaCdm()
library(DT)
?DT
??DT
usethis::use_vignette("Summary")
devtools::load_all(".")
